package com.unihannover.gamedev.models;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

import java.io.Serializable;

/**
 * Represents an achievement or a task, that a user can complete.
 *
 * @author Amrit
 */
@Entity
@IdClass(Achievement.AchievementPK.class)
@Table(name = "achievements", schema = "main")
public class Achievement {

	/**
	 * Subclass, required for composite primary keys.
	 *
	 * @author Amrit
	 */
	public static class AchievementPK implements Serializable {
		protected String id;
		protected String collectorId;

		public AchievementPK() {}

		public AchievementPK(String id, String collectorId) {
			this.id = id;
			this.collectorId = collectorId;
		}

		// equals, hashCode ?!
	}

    @Id
    @Column(name = "id")
    private String id;

	@Id
	@Column(name = "collector_id")
    private String collectorId;

    @Column(name = "name")
    private String name;

    @Column(name = "description")
    private String description;

    @Column(name = "value")
    private double value;

	// *** Autogenerated Setters & Getters ***

	/**
	 * Returns the id (primary key) of an Achievement.
	 *
	 * @return The id
	 */
	public String getId() {
		return id;
	}

	/**
	 * Sets the id (primary key) of an Achievement to a given value.
	 *
	 * @param id The id
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * Returns the id of the collector, the Achievement belongs to (primary key).
	 *
	 * @return The collector id
	 */
	public String getCollectorId() {
		return collectorId;
	}

	/**
	 * Sets the id of the collector, the Achievement belongs to (primary key).
	 *
	 * @param collectorId The collector id
	 */
	public void setCollectorId(String collectorId) {
		this.collectorId = collectorId;
	}

	/**
	 * Returns the Name of the Achievement, that usually describes the Achievement in around 1-3 words.
	 *
	 * @return The Achievement name
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets the Name of the Achievement. Should be an easy name that fits the Achievements description.
	 *
	 * @param name THe Achievement name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Returns a String that explains the Achievement in a short sentence.
	 * Will usually be around 1-2 sentences that descripbe, what a user has to do, to get progress.
	 *
	 * @return The description String
	 */
	public String getDescription() {
		return description;
	}

	/**
	 * Returns a String that explains the Achievement in a short sentence.
	 * Will usually be around 1-2 sentences that descripbe, what a user has to do, to get progress.
	 *
	 * @param description The description String
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Returns the value of an Achievement, representing its importance in general.
	 *
	 * @return The value
	 */
	public double getValue() {
		return value;
	}

	/**
	 * Sets the value of an Achievement, representing its importance in general.
	 * Values are usually between XX and YY (can be added later).
	 *
	 * @param value The value
	 */
	public void setValue(double value) {
		this.value = value;
	}
}
